import { FC } from 'react'

export const Logo: FC<{
  outline?: boolean
  className?: string
  stroke?: number
  size?: number
}> = ({ outline, className, stroke = 2, size = 24 }) => {
  return (
    <svg
      viewBox="0 0 24 24"
      fill="none"
      className={className}
      aria-label="Logo"
      height={size}
      width={size}
    >
      {outline ? (
        <>
          <path
            d="M13.414 20.9L17.657 16.657C18.7758 15.5382 19.5377 14.1127 19.8463 12.5609C19.949 12.0444 20 11.5216 20 11.0001L20 5.00006C20 4.44778 19.5523 4.00006 19 4.00006H18C17.4477 4.00006 17 4.44778 17 5.00006V6.00006C17 6.55235 16.5523 7.00006 16 7.00006H15C14.4477 7.00006 14 6.55235 14 6.00006V5.00006C14 4.44778 13.5523 4.00006 13 4.00006H11C10.4477 4.00006 10 4.44778 10 5.00006V6.00006C10 6.55235 9.55228 7.00006 9 7.00006H8C7.44772 7.00006 7 6.55235 7 6.00006V5.00006C7 4.44778 6.55228 4.00006 6 4.00006H5C4.44772 4.00006 4 4.44778 4 5.00006V11.0008C4.00003 11.5221 4.05101 12.0446 4.15369 12.5609C4.46234 14.1127 5.22422 15.5382 6.343 16.657L10.587 20.9C10.962 21.2746 11.4704 21.4851 12.0005 21.4851C12.5306 21.4851 13.039 21.2746 13.414 20.9Z"
            stroke="currentColor"
            strokeWidth={stroke}
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M11.9994 10L13.4644 11.638C13.7258 11.919 13.9008 12.2694 13.9686 12.6472C14.0363 13.0249 13.994 13.4143 13.8465 13.7686C13.699 14.123 13.4527 14.4274 13.1369 14.6456C12.8211 14.8638 12.4493 14.9865 12.0656 14.9991C11.682 15.0117 11.3029 14.9136 10.9735 14.7166C10.6441 14.5196 10.3783 14.232 10.2079 13.8881C10.0375 13.5442 9.96967 13.1585 10.0125 12.7771C10.0553 12.3956 10.207 12.0346 10.4494 11.737L11.9994 10Z"
            stroke="currentColor"
            strokeWidth={stroke}
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </>
      ) : (
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M3.61406 3.05698C3.37706 3.13098 3.21206 3.26098 3.10906 3.45298L3.02006 3.61998L3.00906 7.53998C2.99606 11.806 3.00506 12.023 3.22206 12.97C3.54706 14.392 4.13706 15.599 5.05606 16.72C5.37006 17.104 9.47706 21.248 9.99906 21.708C11.1731 22.743 12.8271 22.743 14.0011 21.708C14.5131 21.257 18.6251 17.109 18.9471 16.719C20.0911 15.335 20.7951 13.61 20.9611 11.79C20.9911 11.459 21.0011 10.057 20.9931 7.45998L20.9801 3.61998L20.8911 3.45298C20.7851 3.25598 20.6221 3.13098 20.3711 3.05498C20.1081 2.97598 17.8921 2.97598 17.6291 3.05498C17.3771 3.13098 17.2141 3.25598 17.1101 3.45298C17.0311 3.60398 17.0201 3.69898 16.9981 4.43998C16.9841 4.92598 16.9551 5.30598 16.9271 5.37298C16.8461 5.56698 16.6741 5.75998 16.4841 5.87198C16.3011 5.97998 16.2971 5.97998 15.5001 5.97998C14.7031 5.97998 14.6991 5.97998 14.5161 5.87198C14.3261 5.75998 14.1551 5.56798 14.0721 5.37298C14.0441 5.30498 14.0151 4.93198 14.0011 4.43998C13.9791 3.70098 13.9681 3.60398 13.8891 3.45298C13.7861 3.25598 13.6231 3.13098 13.3711 3.05498C13.1081 2.97598 10.8921 2.97598 10.6291 3.05498C10.3771 3.13098 10.2141 3.25598 10.1101 3.45298C10.0311 3.60398 10.0201 3.69898 9.99806 4.43998C9.98406 4.92598 9.95506 5.30598 9.92706 5.37298C9.84606 5.56698 9.67406 5.75998 9.48406 5.87198C9.30106 5.97998 9.29706 5.97998 8.50006 5.97998C7.70306 5.97998 7.69906 5.97998 7.51606 5.87198C7.32606 5.75998 7.15506 5.56798 7.07206 5.37298C7.04406 5.30498 7.01506 4.93198 7.00106 4.43998C6.97906 3.70098 6.96806 3.60398 6.88906 3.45298C6.78606 3.25598 6.62306 3.13098 6.37106 3.05498C6.11706 2.97898 3.85906 2.98098 3.61406 3.05698ZM12.1991 9.53998C12.3511 9.61798 14.0111 11.482 14.1591 11.74C14.6311 12.565 14.5981 13.598 14.0741 14.382C13.3051 15.53 11.7621 15.839 10.6171 15.073C10.1491 14.76 9.81906 14.331 9.64206 13.807C9.40206 13.094 9.49206 12.285 9.87806 11.688C10.0381 11.441 11.6691 9.59298 11.7901 9.52298C11.8921 9.46398 12.0671 9.47098 12.1991 9.53998Z"
          fill="currentColor"
        />
      )}
    </svg>
  )
}
